{"version":3,"sources":["page/Article/style.module.css","page/Article/Article.js"],"names":["module","exports","connect","state","props","history","useHistory","articleId","useParams","id","notes","articleData","list","searchMap","className","style","topbar","backgroundImage","cover","topbarMask","onClick","goBack","topbarBackIcon","push","_id","topbarEditIcon","last_edited_content","draftTip","articleContainer","title","time","getFormtedDate","Date","created_at","splitLine","article","dangerouslySetInnerHTML","__html","content"],"mappings":"sFACAA,EAAOC,QAAU,CAAC,OAAS,sBAAsB,WAAa,0BAA0B,eAAiB,8BAA8B,eAAiB,8BAA8B,SAAW,wBAAwB,iBAAmB,gCAAgC,MAAQ,qBAAqB,KAAO,oBAAoB,UAAY,yBAAyB,QAAU,yB,yUCkDpWC,uBAJE,SAAAC,GAAK,O,yVAAA,IACjBA,KAGUD,EA3CC,SAACE,GACf,IAAMC,EAAUC,cAEVC,EADcC,cACUC,GAHL,EAIGL,EAAMM,OAAS,GAErCC,EANmB,EAIjBC,KAJiB,EAIXC,UACiBN,IAG/B,OACE,6BACE,4BAAQO,UAAWC,IAAMC,OAAQD,MAAO,CAAEE,gBAAgB,OAAD,OAASN,EAAYO,MAArB,OACvD,yBAAKJ,UAAWC,IAAMI,aACtB,uBACEC,QAAS,kBAAMf,EAAQgB,UACvBP,UAAS,mCAA8BC,IAAMO,kBAE/C,0BACEF,QAAS,kBAAMf,EAAQkB,KAAR,gBAAsBZ,EAAYa,OACjDV,UAAWC,IAAMU,gBAFnB,SAQAd,EAAYe,oBACV,yBAAKZ,UAAWC,IAAMY,UAAtB,6HACE,KAEN,yBAAKb,UAAWC,IAAMa,kBACpB,wBAAId,UAAWC,IAAMc,OAAQlB,EAAYkB,OACzC,uBAAGf,UAAWC,IAAMe,MAAOC,YAAe,IAAIC,KAAKrB,EAAYsB,cAC/D,yBAAKnB,UAAWC,IAAMmB,YACtB,6BAASpB,UAAWC,IAAMoB,QAASC,wBAAyB,CAAEC,OAAQ1B,EAAY2B","file":"static/js/4.9ef2fb74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"topbar\":\"style_topbar__2ls54\",\"topbarMask\":\"style_topbarMask__2e_vC\",\"topbarBackIcon\":\"style_topbarBackIcon__gzBlo\",\"topbarEditIcon\":\"style_topbarEditIcon__3Wo3s\",\"draftTip\":\"style_draftTip__3eO0F\",\"articleContainer\":\"style_articleContainer__2CpH7\",\"title\":\"style_title__2sp66\",\"time\":\"style_time__1b4w2\",\"splitLine\":\"style_splitLine__2v8tP\",\"article\":\"style_article__2DT5X\"};","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport style from './style.module.css';\n\nimport { getFormtedDate } from '../../utils/util';\n\nconst Article = (props) => {\n  const history = useHistory();\n  const routeParams = useParams();\n  const articleId = routeParams.id;\n  const { list, searchMap } = props.notes || {};\n  const articleIndex = searchMap[articleId];\n  const articleData = list[articleIndex];\n\n  return (\n    <div>\n      <header className={style.topbar} style={{ backgroundImage: `url(${articleData.cover})` }}>\n        <div className={style.topbarMask} />\n        <i \n          onClick={() => history.goBack()}\n          className={`iconfont icon-jiantou-px ${style.topbarBackIcon}`}\n        />\n        <span \n          onClick={() => history.push(`/edit/${articleData._id}`)}\n          className={style.topbarEditIcon}\n        >\n          EDIT\n        </span>\n      </header>\n      {\n        articleData.last_edited_content ? (\n          <div className={style.draftTip}>该笔记有暂未发布的草稿，点击编辑继续创作~</div>\n        ) : null\n      }\n      <div className={style.articleContainer}>\n        <h1 className={style.title}>{articleData.title}</h1>\n        <p className={style.time}>{getFormtedDate(new Date(articleData.created_at))}</p>\n        <div className={style.splitLine}></div>\n        <article className={style.article} dangerouslySetInnerHTML={{ __html: articleData.content }}></article>\n      </div>\n    </div>\n  );\n};\n\n\nconst mapState = state => ({\n  ...state,\n});\n\nexport default connect(mapState)(Article);\n"],"sourceRoot":""}